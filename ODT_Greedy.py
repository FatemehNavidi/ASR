from __future__ import divisionfrom xlrd import open_workbookfrom sets import Setfrom xlrd.sheet import ctype_textm = 415n = 78wb1 = open_workbook('data1.xls')wb1sheet = wb1.sheet_by_index(0)wb2 = open_workbook('data2.xls')wb2sheet = wb2.sheet_by_index(0)wb3 = open_workbook('data3.xls')wb3sheet = wb3.sheet_by_index(0)wb4 = open_workbook('data4.xls')wb4sheet = wb4.sheet_by_index(0)wb5 = open_workbook('data5.xls')wb5sheet = wb5.sheet_by_index(0)def updateH(e, realScn, insheet):    outcome = insheet.cell(realScn,e)    uncomp = set()    global Scn    for s in Scn:        if(insheet.cell(s,e).value != outcome.value):            uncomp.add(s)    Scn = Scn.difference(uncomp)    return Scndef OneStepODTGreedy(insheet):    global Scn    global U    min = len(Scn)+3    Elm = 1    for e in U:        diff = 0        for s in Scn:            if(insheet.cell(s,e).value == 1):                diff = diff + 1            else:                diff = diff - 1        if(abs(diff)<min):            min = abs(diff)            Elm = e    U.discard(Elm)    return Elmdef ODTGreedy(insheet):    global Scn    global U    Cost = 0    ScnTot = set()    for i in range(2, m+2):        ScnTot.add(i)    for realScn in ScnTot:        U = set()        for i in range(2, n+2):            U.add(i)        Scn = set()        for i in range(2, m+2):            Scn.add(i)        while(len(Scn)>1):            e = OneStepODTGreedy(insheet)            updateH(e, realScn, insheet)        Cost = Cost + (n-len(U))/m    return Costprint("data1's cost: ", ODTGreedy(wb1sheet))print("data2's cost: ", ODTGreedy(wb2sheet))print("data3's cost: ", ODTGreedy(wb3sheet))print("data4's cost: ", ODTGreedy(wb4sheet))print("data5's cost: ", ODTGreedy(wb5sheet))print("average cost: ", (ODTGreedy(wb1sheet)+ODTGreedy(wb2sheet)+ODTGreedy(wb3sheet)+ODTGreedy(wb4sheet)+ODTGreedy(wb5sheet))/5)